/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getSlice",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "number",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newNum",
        type: "uint256",
      },
    ],
    name: "setNum",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newNumber",
        type: "uint256",
      },
    ],
    name: "setNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "wordList",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051806101400160405280604051806040016040528060058152602001644c6f72656d60d81b815250815260200160405180604001604052806005815260200164697073756d60d81b8152508152602001604051806040016040528060058152602001643237b637b960d91b8152508152602001604051806040016040528060038152602001621cda5d60ea1b815250815260200160405180604001604052806004815260200163185b595d60e21b81525081526020016040518060400160405280600b81526020016a31b7b739b2b1ba32ba3ab960a91b81525081526020016040518060400160405280600a81526020016961646970697363696e6760b01b815250815260200160405180604001604052806004815260200163195b1a5d60e21b8152508152602001604051806040016040528060038152602001621cd95960ea1b815250815260200160405180604001604052806002815260200161646f60f01b815250815250600190600a61018b929190610191565b506103b4565b8280548282559060005260206000209081019282156101d7579160200282015b828111156101d757825182906101c790826102f5565b50916020019190600101906101b1565b506101e39291506101e7565b5090565b808211156101e35760006101fb8282610204565b506001016101e7565b5080546102109061026c565b6000825580601f10610220575050565b601f01602090049060005260206000209081019061023e9190610241565b50565b5b808211156101e35760008155600101610242565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061028057607f821691505b6020821081036102a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102f057600081815260208120601f850160051c810160208610156102cd5750805b601f850160051c820191505b818110156102ec578281556001016102d9565b5050505b505050565b81516001600160401b0381111561030e5761030e610256565b6103228161031c845461026c565b846102a6565b602080601f831160018114610357576000841561033f5750858301515b600019600386901b1c1916600185901b1785556102ec565b600085815260208120601f198616915b8281101561038657888601518255948401946001909101908401610367565b50858210156103a45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6105b9806103c36000396000f3fe6080604052600436106100705760003560e01c80638381f58a1161004e5780638381f58a146100ec57806387d150e114610102578063cd16ecbf1461012f578063d09de08a1461014257600080fd5b80633fb5c1cb1461007557806364f764701461009757806367e0badb146100cd575b600080fd5b34801561008157600080fd5b5061009561009036600461041b565b600055565b005b3480156100a357600080fd5b506100b76100b236600461041b565b610157565b6040516100c4919061047a565b60405180910390f35b3480156100d957600080fd5b506000545b6040519081526020016100c4565b3480156100f857600080fd5b506100de60005481565b34801561010e57600080fd5b5061012261011d36600461041b565b610203565b6040516100c49190610494565b61009561013d36600461041b565b610396565b34801561014e57600080fd5b50610095610405565b6001818154811061016757600080fd5b906000526020600020016000915090508054610182906104f6565b80601f01602080910402602001604051908101604052809291908181526020018280546101ae906104f6565b80156101fb5780601f106101d0576101008083540402835291602001916101fb565b820191906000526020600020905b8154815290600101906020018083116101de57829003601f168201915b505050505081565b60015460609082111561025d5760405162461bcd60e51b815260206004820152601d60248201527f4c696d6974206578636565647320776f72644c697374206c656e67746800000060448201526064015b60405180910390fd5b60008267ffffffffffffffff81111561027857610278610530565b6040519080825280602002602001820160405280156102ab57816020015b60608152602001906001900390816102965790505b50905060005b8381101561038f57600181815481106102cc576102cc610546565b9060005260206000200180546102e1906104f6565b80601f016020809104026020016040519081016040528092919081815260200182805461030d906104f6565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b505050505082828151811061037157610371610546565b602002602001018190525080806103879061055c565b9150506102b1565b5092915050565b67016345785d8a00003410156100905760405162461bcd60e51b815260206004820152602e60248201527f496e73756666696369656e742066756e64732c206d696e696d756d20302e312060448201526d195d1a195c881c995c5d5a5c995960921b6064820152608401610254565b6000805490806104148361055c565b9190505550565b60006020828403121561042d57600080fd5b5035919050565b6000815180845260005b8181101561045a5760208185018101518683018201520161043e565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061048d6020830184610434565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156104e957603f198886030184526104d7858351610434565b945092850192908501906001016104bb565b5092979650505050505050565b600181811c9082168061050a57607f821691505b60208210810361052a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161057c57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220a0f5cdc0123840fbe3f88a8a3d12a1c5e8f69860f0df646f3e6ad23b4eaab2ea64736f6c63430008150033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Counter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Counter__factory {
    return super.connect(runner) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new Interface(_abi) as CounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Counter {
    return new Contract(address, _abi, runner) as unknown as Counter;
  }
}
